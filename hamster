#!/bin/bash

action=$1
shift
item=$1
shift
param="$*"

function usage {
	echo ""
	echo "  $(basename $0) <ITEM> <HAMSTER OPTIONS>"
	echo "    Start the selected task in Hamster Time Tracker"
	echo "    (http://projecthamster.wordpress.com/)."
	echo "    Relies on Hamster being installed and excecutable"
	echo " 	  from the command line with the command: hamster"
	echo "    Uses the project of the task as the Hamster category."
	echo "    <HAMSTER OPTIONS> are hamster start options, such as time started."
	echo "    Details for these options can be found in hamster --help"
        echo ""
	echo "    Examples:"
	echo "      $ $TODO_SH $(basename $0) 42 "
	echo "    Starts task 42 in hamster"
	echo "      $ $TODO_SH $(basename $0) 42 15:25"
	echo "    Starts task 42 in hamster with a start time of 15:25"
	echo ""
	exit
}

# make sure there is an item number

if ! [[ "$item" =~ ^[0-9]+$ ]]; then
echo "Error! Usage:"
usage
exit
fi

# fetch the task

line=$(sed "$item!d" "$TODO_FILE")

# cut off the priority

if [[ "$line" =~ ^\([A-Z]\) ]]; then
line=$(echo "$line" | cut -f2- -d ' ') 
fi

# cut off the contexts

if [[ "$line" =~ @ ]]; then
line=$(echo "$line" | sed -r 's/@\w*\s*//g') 
fi

# cut off the creation date

line=$(echo "$line" | sed 's/^\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}[ \t]*//g')

# cut off the projects but retain the first as a hamster category

project=""
if [[ "$line" =~ \+ ]]; then
project=$(echo "$line" | grep -o '[^ ]*+[^ ]\+')
project=${project:1}
project="@$project"
line=$(echo "$line" | sed -r 's/\+\w*\s*//g') 
fi

# cut off time strings starting with t:

if [[ "$line" =~ t: ]]; then
line=$(echo "$line" | sed 's/t:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}//g') 
fi

# cut off time strings starting with due:

if [[ "$line" =~ due: ]]; then
line=$(echo "$line" | sed 's/due:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}//g') 
fi

# start the task in hamster

hamster-cli start "$line$project" $param

#check that hamster has started the task

hamster-cli list  |tail -1
